@page "{id:int}"
@model E_Learning_Platform.Pages.Student.Courses.ViewModel
@{
    Layout = "/Pages/Student/_Layout.cshtml";
    ViewData["Title"] = Model.Course?.Title ?? "Course View";
}

@Html.AntiForgeryToken()

<div class="course-view-container">
    <!-- Course Header -->
    <div class="course-header mb-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-page="/Student/Dashboard">Dashboard</a></li>
                <li class="breadcrumb-item"><a asp-page="/Student/Courses">My Courses</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model.Course?.Title</li>
            </ol>
        </nav>
        <div class="d-flex justify-content-between align-items-start">
            <div>
                <h1 class="h2 mb-2">@Model.Course?.Title</h1>
                <p class="text-muted mb-0">
                    <i class="bi bi-person-circle me-1"></i> @Model.Course?.Instructor
                </p>
            </div>
            <div class="progress-container text-end">
                <div class="progress-circle" data-progress="@Math.Round(Model.Course?.Progress ?? 0)">
                    <div class="progress-circle-value">@Math.Round(Model.Course?.Progress ?? 0)%</div>
                </div>
                <div class="mt-2">
                    @if (Model.NextContentItem != null)
                    {
                        <a href="@Model.ContinueUrl" class="btn btn-primary">
                            <i class="bi bi-play-circle me-1"></i> Continue Learning
                        </a>
                    }
                    @if (Model.IsEligibleForCertificate)
                    {
                        <a asp-page="/Student/Certificate"
                           asp-route-courseId="@Model.Course?.CourseId" 
                           class="btn btn-success ms-2">
                            <i class="bi bi-award me-1"></i> Get Certificate
                        </a>
                    }
                    else if (!string.IsNullOrEmpty(Model.CertificateErrorMessage))
                    {
                        <div class="text-muted small mt-2">
                            <i class="bi bi-info-circle me-1"></i>
                            To get certificate: @Model.CertificateErrorMessage
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Main Content -->
        <div class="col-lg-8">
            <div class="card shadow-sm">
                <div class="card-header bg-white p-0">
                    <ul class="nav nav-tabs card-header-tabs nav-fill">
                        <li class="nav-item">
                            <a class="nav-link active" data-bs-toggle="tab" href="#modules">
                                <i class="bi bi-collection me-1"></i> Modules
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-bs-toggle="tab" href="#assignments">
                                <i class="bi bi-file-text me-1"></i> Assignments
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-bs-toggle="tab" href="#announcements">
                                <i class="bi bi-megaphone me-1"></i> Announcements
                            </a>
                        </li>
                    </ul>
                </div>
                <div class="card-body">
                    <div class="tab-content">
                        <!-- Modules Tab -->
                        <div class="tab-pane fade show active" id="modules">
                            @if (!Model.Modules.Any())
                            {
                                <div class="alert alert-info">
                                    <i class="bi bi-info-circle me-2"></i>
                                    No modules available for this course yet.
                                </div>
                            }
                            else
                            {
                                <div class="accordion" id="modulesAccordion">
                                    @foreach (var module in Model.Modules.OrderBy(m => m.OrderSequence))
                                    {
                                        var moduleStatus = module.CompletionStatus;
                                        var statusClass = moduleStatus switch
                                        {
                                            "Completed" => "success",
                                            "In Progress" => "primary",
                                            _ => "secondary"
                                        };
                                        
                                        <div class="accordion-item">
                                            <h2 class="accordion-header" id="moduleHeading-@module.ModuleId">
                                                <button class="accordion-button @(module.ModuleId == Model.ContinueModuleId ? "" : "collapsed")"
                                                        type="button"
                                                        data-bs-toggle="collapse"
                                                        data-bs-target="#moduleCollapse-@module.ModuleId"
                                                        aria-expanded="@(module.ModuleId == Model.ContinueModuleId ? "true" : "false")"
                                                        aria-controls="moduleCollapse-@module.ModuleId">
                                                    <div class="d-flex w-100 justify-content-between align-items-center">
                                                        <div>
                                                            <span class="module-title">@module.Title</span>
                                                            <span class="badge bg-@statusClass ms-2">@moduleStatus</span>
                                                        </div>
                                                        <small class="text-muted">@module.Contents.Count items</small>
                                                    </div>
                                                </button>
                                            </h2>
                                            <div id="moduleCollapse-@module.ModuleId"
                                                 class="accordion-collapse collapse @(module.ModuleId == Model.ContinueModuleId ? "show" : "")"
                                                 aria-labelledby="moduleHeading-@module.ModuleId"
                                                 data-bs-parent="#modulesAccordion">
                                                <div class="accordion-body">
                                                    <p class="text-muted mb-3">@module.Description</p>
                                                    @if (module.Contents.Any())
                                                    {
                                                        <div class="list-group">
                                                            @foreach (var content in module.Contents.OrderBy(c => c.SequenceNumber))
                                                            {
                                                                var contentUrl = content.ItemType == "quiz"
                                                                    ? $"/Student/Courses/Quiz/{content.ItemId}"
                                                                    : $"/Student/Courses/Content/{content.ItemId}";
                                                                    
                                                                <a href="@contentUrl" 
                                                                   class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                                                                    <div>
                                                                        <i class="bi @GetContentIcon(content.ContentType, content.ItemType) me-2"></i>
                                                                        <span>@content.ContentTitle</span>
                                                                        <small class="text-muted ms-2">
                                                                            (@(content.ItemType == "quiz" ? "Quiz" : "Lesson"))
                                                                        </small>
                                                                    </div>
                                                                    @if (content.IsCompleted)
                                                                    {
                                                                        <span class="badge bg-success rounded-pill">
                                                                            <i class="bi bi-check"></i>
                                                                        </span>
                                                                    }
                                                                    else
                                                                    {
                                                                        <span class="badge bg-primary rounded-pill">
                                                                            <i class="bi bi-play-fill"></i>
                                                                        </span>
                                                                    }
                                                                </a>
                                                            }
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="alert alert-light">
                                                            <i class="bi bi-info-circle me-2"></i>
                                                            No content items available for this module.
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        </div>

                        <!-- Assignments Tab -->
                        <div class="tab-pane fade" id="assignments">
                            @if (!Model.Assignments.Any())
                            {
                                <div class="alert alert-info">
                                    <i class="bi bi-info-circle me-2"></i>
                                    No assignments available for this course.
                                </div>
                            }
                            else
                            {
                                <div class="assignment-grid">
                                    @foreach (var assignment in Model.Assignments)
                                    {
                                        var cardClass = assignment.Status switch
                                        {
                                            "Graded" => "border-success",
                                            "Submitted" => "border-info",
                                            "Overdue" => "border-danger",
                                            _ => "border-warning"
                                        };
                                        
                                        <div class="card @cardClass assignment-card">
                                            <div class="card-body">
                                                <div class="d-flex justify-content-between align-items-start mb-3">
                                                    <h5 class="card-title mb-1">@assignment.Title</h5>
                                                    <span class="badge bg-@(assignment.Status switch
                                                    {
                                                        "Graded" => "success",
                                                        "Submitted" => "info",
                                                        "Overdue" => "danger",
                                                        _ => "warning"
                                                    })">
                                                        @assignment.Status
                                                    </span>
                                                </div>
                                                
                                                <p class="card-text small text-muted mb-3">
                                                    Due: @assignment.DueDate.ToString("MMM dd, yyyy")
                                                </p>
                                                
                                                @if (assignment.Status == "Graded")
                                                {
                                                    <div class="grade-info mb-3">
                                                        <div class="d-flex justify-content-between align-items-center">
                                                            <span>Grade:</span>
                                                            <strong>@assignment.Grade / @assignment.MaxScore</strong>
                                                        </div>
                                                        @if (!string.IsNullOrEmpty(assignment.Feedback))
                                                        {
                                                            <div class="feedback mt-2">
                                                                <small>@assignment.Feedback</small>
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                                
                                                <a href="/Student/Courses/AssignmentDetails?id=@assignment.AssignmentId"
                                                   class="btn btn-sm @(assignment.Status == "Graded" ? "btn-outline-success" : "btn-outline-primary") w-100">
                                                    @if (assignment.Status == "Graded" || assignment.Status == "Submitted")
                                                    {
                                                        <i class="bi bi-eye me-1"></i>
                                                        <span>View Details</span>
                                                    }
                                                    else
                                                    {
                                                        <i class="bi bi-pencil me-1"></i>
                                                        <span>Start Assignment</span>
                                                    }
                                                </a>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        </div>

                        <!-- Announcements Tab -->
                        <div class="tab-pane fade" id="announcements">
                            @if (!Model.Announcements.Any())
                            {
                                <div class="alert alert-info">
                                    <i class="bi bi-info-circle me-2"></i>
                                    No announcements for this course.
                                </div>
                            }
                            else
                            {
                                <div class="announcement-list">
                                    @foreach (var announcement in Model.Announcements.OrderByDescending(a => a.PostedDate))
                                    {
                                        <div class="announcement-item">
                                            <div class="announcement-header">
                                                <h5>@announcement.Title</h5>
                                                <div class="announcement-meta">
                                                    <span class="posted-by">
                                                        <i class="bi bi-person me-1"></i>
                                                        @announcement.PostedBy
                                                    </span>
                                                    <span class="posted-date">
                                                        <i class="bi bi-calendar me-1"></i>
                                                        @announcement.PostedDate.ToString("MMM dd, yyyy")
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="announcement-content">
                                                @announcement.Content
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <div class="card shadow-sm mb-4">
                <div class="card-body">
                    <h5 class="card-title mb-3">Course Information</h5>
                    
                    @if (!string.IsNullOrEmpty(Model.Course?.Description))
                    {
                        <div class="mb-3">
                            <h6 class="text-muted mb-2">Description</h6>
                            <p>@Model.Course?.Description</p>
                        </div>
                    }
                    
                    <div class="course-stats">
                        <div class="stat-item">
                            <i class="bi bi-calendar-check"></i>
                            <div>
                                <small class="text-muted">Enrolled</small>
                                <div>@Model.Course?.EnrollmentDate.ToString("MMM dd, yyyy")</div>
                            </div>
                        </div>
                        
                        <div class="stat-item">
                            <i class="bi bi-collection"></i>
                            <div>
                                <small class="text-muted">Modules</small>
                                <div>@Model.Modules.Count</div>
                            </div>
                        </div>
                        
                        <div class="stat-item">
                            <i class="bi bi-file-text"></i>
                            <div>
                                <small class="text-muted">Assignments</small>
                                <div>@Model.Assignments.Count</div>
                            </div>
                        </div>
                    </div>
                    
                    @if (Model.NextContentItem != null)
                    {
                        <div class="next-content mt-4">
                            <h6 class="text-muted mb-2">Continue Learning</h6>
                            <div class="next-content-item">
                                <div class="content-type">
                                    <i class="bi @(Model.NextContentItem.ItemType == "quiz" ? "bi-question-circle" : "bi-book")"></i>
                                </div>
                                <div class="content-info">
                                    <strong>@Model.NextContentItem.ItemTitle</strong>
                                    <small class="text-muted d-block">@Model.NextContentItem.ModuleTitle</small>
                                </div>
                                <a href="@Model.ContinueUrl" class="btn btn-primary btn-sm">
                                    <i class="bi bi-play-fill"></i>
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .course-view-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 2rem 1rem;
        }

        .course-header {
            background: #fff;
            border-radius: 0.5rem;
            padding: 1.5rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .progress-circle {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background: #f8f9fa;
            position: relative;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 1rem;
        }

        .progress-circle::before {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            border-radius: 50%;
            border: 6px solid #e9ecef;
        }

        .progress-circle::after {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            border-radius: 50%;
            border: 6px solid #0d6efd;
            border-right-color: transparent;
            border-top-color: transparent;
            transform: rotate(45deg);
            animation: progress 1s ease-out forwards;
        }

        .progress-circle[data-progress="100"]::after {
            border-color: #198754;
            border-right-color: #198754;
            border-top-color: #198754;
            transform: rotate(0deg);
        }

        .progress-circle-value {
            font-size: 1.2rem;
            font-weight: bold;
            color: #495057;
        }

        @@keyframes progress {
            to {
                transform: rotate(calc(3.6deg * var(--progress, 0)));
            }
        }

        .accordion-button {
            background: #fff !important;
        }

        .accordion-button:not(.collapsed) {
            color: #0d6efd;
            font-weight: 500;
        }

        .accordion-button::after {
            background-size: 1.2rem;
            transition: all 0.2s ease;
        }

        .list-group-item {
            border: none;
            border-radius: 0.5rem !important;
            margin-bottom: 0.5rem;
            transition: all 0.2s ease;
        }

        .list-group-item:hover {
            background: #f8f9fa;
            transform: translateX(5px);
        }

        .list-group-item i {
            font-size: 1.1rem;
        }

        .assignment-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1rem;
            padding: 1rem 0;
        }

        .assignment-card {
            transition: all 0.2s ease;
            border-width: 2px;
        }

        .assignment-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .grade-info {
            background: #f8f9fa;
            padding: 1rem;
            border-radius: 0.5rem;
        }

        .feedback {
            padding-top: 0.5rem;
            margin-top: 0.5rem;
            border-top: 1px solid #dee2e6;
        }

        .announcement-list {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .announcement-item {
            padding: 1.5rem;
            background: #fff;
            border: 1px solid #dee2e6;
            border-radius: 0.5rem;
        }

        .announcement-header {
            margin-bottom: 1rem;
        }

        .announcement-meta {
            display: flex;
            gap: 1rem;
            font-size: 0.875rem;
            color: #6c757d;
        }

        .course-stats {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .stat-item {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .stat-item i {
            font-size: 1.5rem;
            color: #0d6efd;
        }

        .next-content-item {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 0.5rem;
        }

        .next-content-item .content-type {
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: #e9ecef;
            border-radius: 0.5rem;
        }

        .next-content-item .content-info {
            flex: 1;
        }

        @@media (max-width: 768px) {
            .course-header > div {
                flex-direction: column;
                align-items: center;
                text-align: center;
            }

            .progress-container {
                margin-top: 1.5rem;
            }

            .assignment-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
}

@functions {
    private string GetContentIcon(string contentType, string itemType)
    {
        return itemType.ToLower() switch
        {
            "quiz" => "bi-question-circle",
            _ => contentType.ToLower() switch
            {
                "video" => "bi-play-circle",
                "document" => "bi-file-text",
                "presentation" => "bi-easel",
                _ => "bi-book"
            }
        };
    }
}