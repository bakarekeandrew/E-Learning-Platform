@page "{id}"
@model E_Learning_Platform.Pages.Student.Courses.ViewModel
@{
    Layout = "/Pages/Student/_Layout.cshtml";
}

@Html.AntiForgeryToken()



<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-page="/Student/Dashboard">Dashboard</a></li>
                <li class="breadcrumb-item"><a asp-page="/Student/Courses">My Courses</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model.Course?.Title</li>
            </ol>
        </nav>
        <h1 class="h2 mb-0">@Model.Course?.Title</h1>
        <p class="text-muted mb-0">Instructor: @Model.Course?.Instructor</p>
    </div>
    <div class="progress-container" style="width: 200px;">
        <div class="d-flex justify-content-between small mb-1">
            <span>Course Progress</span>
            <span>@Math.Round(Model.Course?.Progress ?? 0, 1)%</span>
        </div>
        <div class="progress" style="height: 8px;">
            <div class="progress-bar" role="progressbar"
                 style="width: @(Model.Course?.Progress ?? 0)%;"
                 aria-valuenow="@(Model.Course?.Progress ?? 0)"
                 aria-valuemin="0"
                 aria-valuemax="100"></div>
        </div>
    </div>
</div>

<div class="row">
    <!-- Course Content Column -->
    <div class="col-lg-8">
        <div class="card shadow mb-4">
            <div class="card-header bg-white">
                <ul class="nav nav-tabs card-header-tabs">
                    <li class="nav-item">
                        <a class="nav-link active" data-bs-toggle="tab" href="#modules">Modules</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="tab" href="#announcements">Announcements</a>
                    </li>
                    @* <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="tab" href="#resources">Resources</a>
                    </li> *@
                    <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="tab" href="#assignments">Assignments</a>
                    </li>
                </ul>
            </div>
            <div class="card-body">
                <div class="tab-content">
                    <!-- Modules Tab -->
                    <div class="tab-pane fade show active" id="modules">
                        @if (!Model.Modules.Any())
                        {
                            <div class="alert alert-warning">
                                No modules available for this course.
                            </div>
                        }
                        else
                        {
                            <div class="accordion" id="modulesAccordion">
                                @foreach (var module in Model.Modules.OrderBy(m => m.OrderSequence))
                                {
                                    <div class="accordion-item">
                                        <h2 class="accordion-header" id="moduleHeading-@module.ModuleId">
                                            <button class="accordion-button @(module.ModuleId != Model.ContinueModuleId ? "collapsed" : "")"
                                                    type="button" data-bs-toggle="collapse"
                                                    data-bs-target="#moduleCollapse-@module.ModuleId"
                                                    aria-expanded="@(module.ModuleId == Model.ContinueModuleId ? "true" : "false")"
                                                    aria-controls="moduleCollapse-@module.ModuleId">
                                                <div class="d-flex align-items-center justify-content-between w-100">
                                                    <div>
                                                        @if (module.CompletionStatus == "Completed")
                                                        {
                                                            <span class="badge bg-success me-2"><i class="bi bi-check-circle"></i></span>
                                                        }
                                                        else if (module.CompletionStatus == "In Progress")
                                                        {
                                                            <span class="badge bg-warning me-2"><i class="bi bi-arrow-repeat"></i></span>
                                                        }
                                                        else
                                                        {
                                                            <span class="badge bg-secondary me-2"><i class="bi bi-lock"></i></span>
                                                        }
                                                        <span>@module.Title</span>
                                                    </div>
                                                </div>
                                            </button>
                                        </h2>
                                        <div id="moduleCollapse-@module.ModuleId"
                                             class="accordion-collapse collapse @(module.ModuleId == Model.ContinueModuleId ? "show" : "")"
                                             aria-labelledby="moduleHeading-@module.ModuleId"
                                             data-bs-parent="#modulesAccordion">
                                            <div class="accordion-body">
                                                <p class="text-muted">@module.Description</p>

                                                @if (module.Contents.Any())
                                                {
                                                    <div class="list-group">
                                                        @foreach (var content in module.Contents)
                                                        {
                                                            <a href="@(content.ItemType == "quiz" ?
                      $"/Student/Courses/Quiz/{content.ContentId}" :
                      $"/Student/Courses/Content?id={content.ContentId}")"
                                                                   class="list-group-item list-group-item-action">
                                                                    <div class="d-flex justify-content-between align-items-center">
                                                                        <div>
                                                                            <i class="bi @GetContentIcon(content.ContentType, content.ItemType) me-2"></i>
                                                                            @content.ContentTitle
                                                                        </div>
                                                                        @if (content.IsCompleted)
                                                                        {
                                                                            <span class="badge bg-success"><i class="bi bi-check"></i></span>
                                                                        }
                                                                        else
                                                                        {
                                                                            <span class="badge bg-light text-dark"><i class="bi bi-play"></i></span>
                                                                        }
                                                                    </div>
                                                                </a>
                                                        }
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="alert alert-info">
                                                        No content items available for this module.
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>

                    <!-- Announcements Tab -->
                    <div class="tab-pane fade" id="announcements">
                        @if (!Model.Announcements.Any())
                        {
                            <div class="alert alert-info">
                                No announcements have been posted for this course.
                            </div>
                        }
                        else
                        {
                            <div class="list-group">
                                @foreach (var announcement in Model.Announcements)
                                {
                                    <div class="list-group-item">
                                        <div class="d-flex w-100 justify-content-between">
                                            <h5 class="mb-1">@announcement.Title</h5>
                                            <small>@announcement.PostedDate.ToString("MMM dd, yyyy")</small>
                                        </div>
                                        <p class="mb-1">@announcement.Content</p>
                                        <small class="text-muted">Posted by: @announcement.PostedBy</small>
                                    </div>
                                }
                            </div>
                        }
                    </div>

                    <!-- Resources Tab Content - REMOVED -->
                    @* <div class="tab-pane fade" id="resources">
                        @if (!Model.Resources.Any())
                        {
                            <div class="alert alert-info">
                                No additional resources are available for this course.
                            </div>
                        }
                        else
                        {
                            <div class="list-group">
                                @foreach (var resource in Model.Resources)
                                {
                                    <div class="list-group-item">
                                        <div class="d-flex w-100 justify-content-between">
                                            <h5 class="mb-1">
                                                <i class="bi @GetResourceIcon(resource.Type) me-2"></i>
                                                @resource.Title
                                            </h5>
                                            <small class="badge bg-primary">@resource.Type</small>
                                        </div>
                                        <p class="mb-1">@resource.Description</p>
                                        <small class="text-muted">Module: @resource.ModuleTitle</small>
                                        @if (!string.IsNullOrEmpty(resource.Url))
                                        {
                                            <div class="mt-2">
                                                <a href="@resource.Url" class="btn btn-sm btn-outline-primary" target="_blank">
                                                    <i class="bi bi-download"></i> Access Resource
                                                </a>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        }
                    </div> *@

                    <!-- Assignments Tab -->
                    <div class="tab-pane fade" id="assignments">
                        @if (!Model.Assignments.Any())
                        {
                            <div class="alert alert-info">
                                No assignments have been created for this course.
                            </div>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Title</th>
                                            <th>Module</th>
                                            <th>Due Date</th>
                                            <th>Status</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var assignment in Model.Assignments)
                                        {
                                            <tr>
                                                <td>@assignment.Title</td>
                                                <td>@(assignment.ModuleTitle ?? "Course Level")</td>
                                                <td>@assignment.DueDate.ToString("MMM dd, yyyy")</td>
                                                <td>
                                                    @{
                                                        var badgeClass = assignment.Status switch
                                                        {
                                                            "Graded" => "bg-success",
                                                            "Submitted" => "bg-info",
                                                            "Overdue" => "bg-danger",
                                                            _ => "bg-warning"
                                                        };
                                                    }
                                                    <span class="badge @badgeClass">@assignment.Status</span>
                                                    @if (assignment.Status == "Graded")
                                                    {
                                                        <span class="ms-2">@assignment.Grade / @assignment.MaxScore</span>
                                                    }
                                                </td>
                                                <td>
                                                    <a href="/Student/Courses/Assignment?id=@assignment.AssignmentId" class="btn btn-sm btn-outline-primary">
                                                        @if (assignment.Status == "Submitted" || assignment.Status == "Graded")
                                                        {
                                                            <i class="bi bi-eye"></i>
                                                            <span>View</span>
                                                        }
                                                        else
                                                        {
                                                            <i class="bi bi-pencil"></i>
                                                            <span>Start</span>
                                                        }
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                    

                </div>
            </div>
        </div>
    </div>

    <!-- Course Sidebar -->
    <div class="col-lg-4">
        <!-- Course Information -->
        <div class="card shadow mb-4">
            <div class="card-header">
                <h5 class="mb-0">Course Information</h5>
            </div>
            <div class="card-body">
                @if (!string.IsNullOrEmpty(Model.Course?.Description))
                {
                    <div class="mb-3">
                        <h6>Description</h6>
                        <p class="text-muted">@Model.Course?.Description</p>
                    </div>
                }
                <div class="mb-3">
                    <h6>Enrollment Date</h6>
                    <p class="text-muted">@(Model.Course?.EnrollmentDate.ToString("MMM dd, yyyy") ?? "N/A")</p>
                </div>
                <div class="mb-3">
                    <h6>Status</h6>
                    <p class="text-muted">@(Model.Course?.Status ?? "Active")</p>
                </div>
                @if (Model.NextContentItem != null)
                {
                    <div class="d-grid gap-2 mt-3">
                        <a href="@Model.ContinueUrl" class="btn btn-primary">
                            <i class="bi bi-play-circle"></i> Continue Learning
                        </a>
                        <small class="text-muted text-center">
                            Next: @Model.NextContentItem.ItemTitle
                        </small>
                    </div>
                }
            </div>
        </div>

        <!-- Upcoming Deadlines -->
        <div class="card shadow mb-4">
            <div class="card-header">
                <h5 class="mb-0">Upcoming Deadlines</h5>
            </div>
            <div class="card-body">
                @{
                    var upcomingAssignments = Model.Assignments
                    .Where(a => a.Status != "Graded" && a.Status != "Submitted" && a.DueDate > DateTime.Now)
                    .OrderBy(a => a.DueDate)
                    .Take(3)
                    .ToList();
                }

                @if (!upcomingAssignments.Any())
                {
                    <div class="alert alert-success">
                        No upcoming deadlines! You're all caught up.
                    </div>
                }
                else
                {
                    <div class="list-group list-group-flush">
                        @foreach (var assignment in upcomingAssignments)
                        {
                            <a href="/Student/Courses/Assignment?id=@assignment.AssignmentId" class="list-group-item list-group-item-action">
                                <div class="d-flex w-100 justify-content-between">
                                    <h6 class="mb-1">@assignment.Title</h6>
                                </div>
                                <p class="mb-1 small">Due: @assignment.DueDate.ToString("MMM dd, yyyy")</p>
                                <small class="text-muted">@assignment.ModuleTitle</small>
                            </a>
                        }
                    </div>
                }
            </div>
        </div>

        <!-- Contact Instructor -->
        <div class="card shadow mb-4">
            <div class="card-header">
                <h5 class="mb-0">Contact Instructor</h5>
            </div>
            <div class="card-body">
                <p>Have questions? Reach out to your instructor directly.</p>
                <div class="d-grid">
                    <a href="mailto:@Model.Course?.InstructorEmail" class="btn btn-outline-primary">
                        <i class="bi bi-envelope"></i> Email Instructor
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.accordion-body {
    max-height: 400px;
    overflow-y: auto;
}
</style>

<script>
function getAntiForgeryToken() {
    return document.querySelector('input[name="__RequestVerificationToken"]').value;
}

document.addEventListener('DOMContentLoaded', function () {
    let completedModules = new Set();

    document.querySelectorAll('.accordion-collapse').forEach(function (collapseEl) {
        collapseEl.addEventListener('show.bs.collapse', function () {
            let moduleId = this.id.replace('moduleCollapse-', '');
            if (completedModules.has(moduleId)) return;
            completedModules.add(moduleId);

            fetch('?handler=MarkModuleComplete', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': getAntiForgeryToken()
                },
                body: JSON.stringify({ ModuleId: parseInt(moduleId) })
            }).then(res => {
                if (!res.ok) {
                    console.error('Failed to mark module as completed');
                    return;
                }
                return res.json();
            }).then(data => {
                if (data && data.success) {
                    console.log('Module ' + moduleId + ' marked as completed!');
                }
            }).catch(err => {
                console.error('Error marking module as completed:', err);
            });
        });
    });
});
</script>

@functions {
    private string GetContentIcon(string contentType, string itemType)
    {
        if (itemType == "quiz") return "bi-question-circle";

        // Removed resource-specific icons, defaulting for any other type if it were to appear
        return contentType switch
        {
            // Example: Add cases if other content types re-emerge
            _ => "bi-file-earmark"
        };
    }

    // GetResourceIcon function is removed as Model.Resources is removed
    @* private string GetResourceIcon(string resourceType)
    {
        return resourceType switch
        {
            "Video" => "bi-play-circle",
            "PDF" => "bi-file-pdf",
            "Document" => "bi-file-text",
            "Link" => "bi-link",
            _ => "bi-file-earmark"
        };
    } *@
}