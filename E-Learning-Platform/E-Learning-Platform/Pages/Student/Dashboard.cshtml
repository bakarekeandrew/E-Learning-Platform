@page
@model E_Learning_Platform.Pages.Student.DashboardModel
@{
    Layout = "/Pages/Student/_Layout.cshtml";
    ViewData["Title"] = "Student Dashboard";
}

<!-- Breadcrumb -->
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-page="/Student/Dashboard">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Dashboard</li>
    </ol>
</nav>

<!-- Page Header -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h2">Student Dashboard</h1>
    <a asp-page="/Logout" class="btn btn-outline-secondary">
        <i class="bi bi-box-arrow-right"></i> Logout
    </a>
</div>

<!-- Stats Cards -->
<div class="row mb-4">
    <div class="col-md-3 mb-3 mb-md-0">
        <div class="card stats-card border-left-primary shadow h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h6 class="text-uppercase text-muted mb-1">Enrolled Courses</h6>
                        <h2 class="stat-value mb-0">@Model.Stats.EnrolledCourses</h2>
                    </div>
                    <i class="bi bi-journal-bookmark text-primary" style="font-size: 2rem;"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3 mb-3 mb-md-0">
        <div class="card stats-card border-left-success shadow h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h6 class="text-uppercase text-muted mb-1">Completed</h6>
                        <h2 class="stat-value mb-0">@Model.Stats.CompletedAssignments</h2>
                    </div>
                    <i class="bi bi-check-circle text-success" style="font-size: 2rem;"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3 mb-3 mb-md-0">
        <div class="card stats-card border-left-warning shadow h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h6 class="text-uppercase text-muted mb-1">Pending</h6>
                        <h2 class="stat-value mb-0">@Model.Stats.PendingAssignments</h2>
                    </div>
                    <i class="bi bi-exclamation-triangle text-warning" style="font-size: 2rem;"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card stats-card border-left-info shadow h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h6 class="text-uppercase text-muted mb-1">Progress</h6>
                        <h2 class="stat-value mb-0">@Model.Stats.OverallProgress.ToString("0")%</h2>
                    </div>
                    <i class="bi bi-graph-up text-info" style="font-size: 2rem;"></i>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- My Courses -->
    <div class="col-lg-8 mb-4">
        <div class="card shadow mb-4">
            <div class="card-header d-flex justify-content-between align-items-center py-3">
                <h5 class="mb-0">My Courses</h5>
                <div class="input-group" style="width: 250px;">
                    <input type="text" class="form-control form-control-sm" placeholder="Search courses...">
                    <button class="btn btn-sm btn-outline-secondary" type="button">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Course</th>
                                <th>Instructor</th>
                                <th>Progress</th>
                                <th>Enrolled</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var course in Model.MyCourses)
                            {
                                <tr>
                                    <td>
                                        <strong>@course.Title</strong>
                                    </td>
                                    <td>@course.Instructor</td>
                                    <td>
                                        <div class="progress" style="height: 20px;">
                                            <div class="progress-bar" role="progressbar"
                                                 style="width: @course.Progress%;"
                                                 aria-valuenow="@course.Progress"
                                                 aria-valuemin="0"
                                                 aria-valuemax="100">
                                                @course.Progress.ToString("0")%
                                            </div>
                                        </div>
                                    </td>
                                    <td>@course.EnrollmentDate.ToString("MMM dd, yyyy")</td>
                                    <td class="text-end">
                                        <a asp-page="/Student/Courses/View" asp-route-id="@course.CourseId"
                                           class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-arrow-right-circle"></i> Continue
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Upcoming Assignments & Recent Activity -->
    <div class="col-lg-4">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h5 class="mb-0">Upcoming Assignments</h5>
            </div>
            <div class="card-body">
                <div class="list-group list-group-flush">
                    @foreach (var assignment in Model.UpcomingAssignments.Take(5))
                    {
                        <div class="list-group-item border-0 px-0 py-2">
                            <div class="d-flex align-items-start">
                                <div class="me-3">
                                    <span class="badge @(assignment.IsSubmitted ? "bg-success" : "bg-warning") rounded-circle p-2">
                                        <i class="bi @(assignment.IsSubmitted ? "bi-check-circle" : "bi-clock")"></i>
                                    </span>
                                </div>
                                <div>
                                    <h6 class="mb-1">@assignment.Title</h6>
                                    <p class="mb-1 small">@assignment.CourseTitle</p>
                                    <small class="text-muted">Due @assignment.DueDate.ToString("MMM dd, h:mm tt")</small>
                                </div>
                            </div>
                        </div>
                    }
                    @if (Model.UpcomingAssignments.Count > 5)
                    {
                        <div class="text-center mt-2">
                            <a asp-page="/Student/Assignments" class="btn btn-sm btn-outline-primary">
                                View All (@Model.UpcomingAssignments.Count)
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="card shadow">
            <div class="card-header py-3">
                <h5 class="mb-0">Recent Activity</h5>
            </div>
            <div class="card-body">
                <div class="list-group list-group-flush">
                    @foreach (var activity in Model.RecentActivities)
                    {
                        <div class="list-group-item border-0 px-0 py-2">
                            <div class="d-flex align-items-start">
                                <div class="me-3">
                                    <span class="badge bg-info rounded-circle p-2">
                                        <i class="bi bi-activity"></i>
                                    </span>
                                </div>
                                <div>
                                    <h6 class="mb-1">@activity.Type</h6>
                                    <p class="mb-1 small">@activity.Description</p>
                                    <small class="text-muted">@activity.Timestamp.ToString("MMM dd, h:mm tt")</small>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Course search functionality
            const searchInput = document.querySelector('.card-header input[placeholder="Search courses..."]');
            const courseTable = document.querySelector('.table-responsive table');
            const courseRows = courseTable.querySelectorAll('tbody tr');

            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase().trim();

                courseRows.forEach(row => {
                    const courseTitle = row.querySelector('td:first-child strong').textContent.toLowerCase();
                    const isVisible = courseTitle.includes(searchTerm);
                    row.style.display = isVisible ? '' : 'none';
                });

                // Show message if no courses match the search
                const visibleRows = Array.from(courseRows).filter(row => row.style.display !== 'none');

                const existingNoResults = courseTable.querySelector('.no-results-message');
                if (existingNoResults) {
                    existingNoResults.remove();
                }

                if (visibleRows.length === 0 && searchTerm !== '') {
                    const tbody = courseTable.querySelector('tbody');
                    const noResultsRow = document.createElement('tr');
                    noResultsRow.className = 'no-results-message';
                    noResultsRow.innerHTML = `<td colspan="5" class="text-center py-3">No courses found matching "${searchTerm}"</td>`;
                    tbody.appendChild(noResultsRow);
                }
            });

            // Add functionality to search button
            const searchButton = document.querySelector('.card-header button');
            searchButton.addEventListener('click', function() {
                const event = new Event('input');
                searchInput.dispatchEvent(event);
            });

            // Add functionality to clear search when pressing ESC key
            searchInput.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    this.value = '';
                    const event = new Event('input');
                    this.dispatchEvent(event);
                }
            });
        });
    </script>
}