@page
@model E_Learning_Platform.Pages.Instructor.Content.EditQuestionModel
@{
    Layout = "/Pages/Instructor/_Layout.cshtml";
    ViewData["Title"] = "Edit Question";
}

<div class="row">
    <div class="col-lg-8 mx-auto">
        <div class="card shadow">
            <div class="card-header py-3">
                <h5 class="mb-0">Edit Question</h5>
                <p class="text-muted mb-0">For quiz: @Model.QuizTitle</p>
            </div>
            <div class="card-body">
                <form method="post" id="questionForm">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="QuizId" />
                    <input type="hidden" asp-for="QuestionId" />

                    <div class="mb-3">
                        <label asp-for="Question.QuestionText" class="form-label">Question Text</label>
                        <textarea asp-for="Question.QuestionText" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="Question.QuestionText" class="text-danger"></span>
                    </div>

                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Question.QuestionType" class="form-label">Question Type</label>
                                <select asp-for="Question.QuestionType" class="form-select" id="questionType">
                                    <option value="multiple_choice">Multiple Choice</option>
                                    <option value="true_false">True/False</option>
                                </select>
                                <span asp-validation-for="Question.QuestionType" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Question.Points" class="form-label">Points</label>
                                <input asp-for="Question.Points" class="form-control" type="number" min="1" />
                                <span asp-validation-for="Question.Points" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Question.SequenceNumber" class="form-label">Question Order</label>
                        <input asp-for="Question.SequenceNumber" class="form-control" type="number" min="1" />
                        <span asp-validation-for="Question.SequenceNumber" class="text-danger"></span>
                    </div>

                    <div id="optionsSection">
                        <h6 class="mb-3">Options</h6>

                        <div id="optionsContainer">
                            @for (int i = 0; i < Model.Question.Options.Count; i++)
                            {
                                        <div class="option-item mb-3">
                                            <div class="input-group">
                                                <div class="input-group-text">
                                                    <input class="form-check-input mt-0" type="radio" 
                                                           name="CorrectOptionIndex" value="@i" 
                                            @(Model.Question.Options[i].IsCorrect ? "checked" : "")>
                                                </div>
                                                <input type="text" class="form-control" 
                                                       name="Question.Options[@i].OptionText" 
                                                       value="@Model.Question.Options[i].OptionText" required>
                                                <input type="hidden" name="Question.Options[@i].OptionId" 
                                                       value="@Model.Question.Options[i].OptionId" />
                                                <button type="button" class="btn btn-outline-danger remove-option" 
                                        @(i < 2 ? "disabled" : "")>
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </div>
                                        </div>
                            }
                        </div>

                        <button type="button" id="addOption" class="btn btn-sm btn-outline-primary mb-3">
                            <i class="bi bi-plus"></i> Add Option
                        </button>
                    </div>

                    <div class="d-flex justify-content-between">
                        <a asp-page="QuizQuestions" asp-route-quizId="@Model.QuizId" class="btn btn-secondary">Cancel</a>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

            <script>
                $(document).ready(function() {
                    let optionCount = @Model.Question.Options.Count;

                    // Add new option
                    $('#addOption').click(function() {
                        const newOption = `
                            <div class="option-item mb-3">
                                <div class="input-group">
                                    <div class="input-group-text">
                                        <input class="form-check-input mt-0" type="radio" name="CorrectOptionIndex" value="${optionCount}">
                                    </div>
                                    <input type="text" class="form-control" name="Question.Options[${optionCount}].OptionText" required>
                                    <button type="button" class="btn btn-outline-danger remove-option">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </div>
                        `;
                        $('#optionsContainer').append(newOption);
                        optionCount++;

                        // Enable all remove buttons except the first two
                        $('.remove-option').slice(2).prop('disabled', false);
                    });

                    // Remove option
                    $(document).on('click', '.remove-option', function() {
                        if ($('.option-item').length > 2) {
                            $(this).closest('.option-item').remove();
                            // Reindex radio buttons
                            $('.option-item').each(function(index) {
                                $(this).find('input[type="radio"]').val(index);
                            });
                            optionCount--;
                        }
                    });

                    // Toggle options section based on question type
                    $('#questionType').change(function() {
                        if ($(this).val() === 'true_false') {
                            $('#optionsSection').hide();
                        } else {
                            $('#optionsSection').show();
                        }
                    });

                    // Initialize based on question type
                    if ($('#questionType').val() === 'true_false') {
                        $('#optionsSection').hide();
                    }
                });
            </script>
}