@page
@model E_Learning_Platform.Pages.Instructor.DashboardModel
@{
    Layout = "/Pages/Instructor/_Layout.cshtml";
    ViewData["Title"] = "Instructor Dashboard";
}

<!-- Error Message Display -->
@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger">
        <strong>Error:</strong> @Model.ErrorMessage
    </div>
}

<!-- Breadcrumb -->
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-page="/Instructor/Dashboard">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Dashboard</li>
    </ol>
</nav>

<!-- Page Header -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h2">Instructor Dashboard</h1>
    @* <div> *@
    @*     <a asp-page="/Logout" class="btn btn-outline-secondary me-2"> *@
    @*         <i class="bi bi-box-arrow-right"></i> Logout *@
    @*     </a> *@
    @*     <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createCourseModal"> *@
    @*         <i class="bi bi-plus-circle"></i> New Course *@
    @*     </button> *@
    @* </div> *@
</div>

<!-- Stats Cards -->
<div class="row mb-4">
    <div class="col-md-4 mb-3 mb-md-0">
        <div class="card stats-card border-left-primary shadow h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h6 class="text-uppercase text-muted mb-1">Courses</h6>
                        <h2 class="stat-value mb-0"> @Model.MyCourses.Count</h2>
                        <!-- Debug: Show raw count from courses list -->
                        @* <small class="text-muted">(Raw count: @Model.MyCourses.Count)</small> *@
                    </div>
                    <i class="bi bi-book text-primary" style="font-size: 2rem;"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4 mb-3 mb-md-0">
        <div class="card stats-card border-left-success shadow h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h6 class="text-uppercase text-muted mb-1">Students</h6>
                        <h2 class="stat-value mb-0">@Model.Stats.StudentCount</h2>
                    </div>
                    <i class="bi bi-people text-success" style="font-size: 2rem;"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4 mb-3 mb-md-0">
        <div class="card stats-card border-left-warning shadow h-100">
            <div class="card-body">
                <div class="d-flex justify-content-b
etween align-items-center">
                    <div>
                        <h6 class="text-uppercase text-muted mb-1">Pending</h6>
                        <h2 class="stat-value mb-0">@Model.Stats.PendingAssignments</h2>
                        <!-- Debug: Show raw count from pending list -->
                        @* <small class="text-muted">(Raw count: @Model.PendingSubmissions.Count)</small> *@
                    </div>
                    <i class="bi bi-exclamation-triangle text-warning" style="font-size: 2rem;"></i>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- My Courses -->
    <div class="col-lg-8 mb-4">
        <div class="card shadow mb-4">
            <div class="card-header d-flex justify-content-between align-items-center py-3">
                <h5 class="mb-0">My Courses</h5>
                <div class="input-group" style="width: 250px;">
                    <input type="text" class="form-control form-control-sm" placeholder="Search courses...">
                    <button class="btn btn-sm btn-outline-secondary" type="button">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Course</th>
                                <th>Students</th>
                                <th>Rating</th>
                                <th>Status</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.MyCourses.Count == 0)
                            {
                                <tr>
                                    <td colspan="5" class="text-center py-3">No courses found. Create your first course by clicking the "New Course" button.</td>
                                </tr>
                            }
                            else
                            {
                                @foreach (var course in Model.MyCourses)
                                {
                                    <tr>
                                        <td>
                                            <strong>@course.Title</strong>
                                            <div class="text-muted small">Created @course.CreatedDate.ToString("MMM dd, yyyy")</div>
                                        </td>
                                        <td>@course.StudentCount</td>
                                        <td>
                                            <span class="badge bg-warning bg-opacity-10 text-warning">
                                                <i class="bi bi-star-fill"></i> @course.Rating.ToString("0.0")
                                            </span>
                                        </td>
                                        <td>
                                            @if (course.IsActive)
                                            {
                                                <span class="badge bg-success">Active</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">Draft</span>
                                            }
                                        </td>
                                        <td class="text-end">
                                            <div class="btn-group">
                                                <a asp-page="/Instructor/Courses/Edit" asp-route-id="@course.CourseId" class="btn btn-sm btn-outline-primary">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                                <a asp-page="/Instructor/Courses/Edit" asp-route-id="@course.CourseId" class="btn btn-sm btn-outline-secondary">
                                                    <i class="bi bi-pencil"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activity & Pending Submissions -->
    <div class="col-lg-4">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h5 class="mb-0">Recent Activity</h5>
            </div>
            <div class="card-body">
                <div class="list-group list-group-flush">
                    @if (Model.RecentActivities.Count == 0)
                    {
                        <div class="text-center py-3 text-muted">
                            No recent activity to display.
                        </div>
                    }
                    else
                    {
                        @foreach (var activity in Model.RecentActivities)
                        {
                            <div class="list-group-item border-0 px-0 py-2">
                                <div class="d-flex align-items-start">
                                    <div class="me-3">
                                        @if (activity.Type == "Assignment Submitted")
                                        {
                                            <span class="badge bg-primary rounded-circle p-2">
                                                <i class="bi bi-file-earmark-text"></i>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-success rounded-circle p-2">
                                                <i class="bi bi-person-plus"></i>
                                            </span>
                                        }
                                    </div>
                                    <div>
                                        <h6 class="mb-1">@activity.Type</h6>
                                        <p class="mb-1 small">@activity.Description</p>
                                        <small class="text-muted">@activity.Timestamp.ToString("MMM dd, h:mm tt")</small>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>

        <div class="card shadow">
            <div class="card-header py-3">
                <h5 class="mb-0">Pending Submissions</h5>
            </div>
            <div class="card-body">
                <div class="list-group list-group-flush">
                    @if (Model.PendingSubmissions.Count == 0)
                    {
                        <div class="text-center py-3 text-muted">
                            No pending submissions to grade.
                        </div>
                    }
                    else
                    {
                        @foreach (var submission in Model.PendingSubmissions.Take(3))
                        {
                            <div class="list-group-item border-0 px-0 py-2">
                                <div class="d-flex align-items-start">
                                    <div class="me-3">
                                        <span class="badge bg-warning rounded-circle p-2">
                                            <i class="bi bi-exclamation-triangle"></i>
                                        </span>
                                    </div>
                                    <div>
                                        <h6 class="mb-1">@submission.AssignmentTitle</h6>
                                        <p class="mb-1 small">Submitted by @submission.StudentName</p>
                                        <small class="text-muted">@submission.SubmittedDate.ToString("MMM dd, h:mm tt")</small>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (Model.PendingSubmissions.Count > 3)
                        {
                            <div class="text-center mt-2">
                                <a asp-page="/Instructor/Content/Assignments" class="btn btn-sm btn-outline-primary">View All (@Model.PendingSubmissions.Count)</a>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create Course Modal -->
<div class="modal fade" id="createCourseModal" tabindex="-1" aria-labelledby="createCourseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createCourseModalLabel">Create New Course</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-page="/Instructor/Courses/Create">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="courseTitle" class="form-label">Course Title</label>
                        <input type="text" class="form-control" id="courseTitle" name="Title" required>
                    </div>
                    <div class="mb-3">
                        <label for="courseDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="courseDescription" name="Description" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <select class="form-select" name="IsActive">
                            <option value="false">Draft</option>
                            <option value="true">Published</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create Course</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });

            // Course search functionality
            const searchInput = document.querySelector('.card-header input[placeholder="Search courses..."]');
            const courseTable = document.querySelector('.table-responsive table');
            const courseRows = courseTable.querySelectorAll('tbody tr');

            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase().trim();

                courseRows.forEach(row => {
                    // Skip the "No courses found" row if it exists
                    if (row.querySelector('td[colspan="5"]')) {
                        return;
                    }

                    const courseTitle = row.querySelector('td:first-child strong')?.textContent.toLowerCase();
                    if (!courseTitle) return;

                    const isVisible = courseTitle.includes(searchTerm);
                    row.style.display = isVisible ? '' : 'none';
                });

                // Show message if no courses match the search
                const visibleRows = Array.from(courseRows).filter(row =>
                    row.style.display !== 'none' && !row.querySelector('td[colspan="5"]'));

                const existingNoResults = courseTable.querySelector('.no-results-message');
                if (existingNoResults) {
                    existingNoResults.remove();
                }

                if (visibleRows.length === 0 && searchTerm !== '') {
                    const tbody = courseTable.querySelector('tbody');
                    const noResultsRow = document.createElement('tr');
                    noResultsRow.className = 'no-results-message';
                    noResultsRow.innerHTML = `<td colspan="5" class="text-center py-3">No courses found matching "${searchTerm}"</td>`;
                    tbody.appendChild(noResultsRow);
                }
            });

            // Add functionality to search button
            const searchButton = document.querySelector('.card-header button');
            searchButton.addEventListener('click', function() {
                // Trigger the input event to perform the search
                const event = new Event('input');
                searchInput.dispatchEvent(event);
            });

            // Add functionality to clear search when pressing ESC key
            searchInput.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    this.value = '';
                    // Trigger the input event to reset the search
                    const event = new Event('input');
                    this.dispatchEvent(event);
                }
            });
        });
    </script>
}