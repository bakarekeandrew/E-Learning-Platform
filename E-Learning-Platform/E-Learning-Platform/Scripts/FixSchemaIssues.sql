-- Fix USERS table column types
ALTER TABLE [dbo].[USERS] ALTER COLUMN [FULL_NAME] NVARCHAR(200) NOT NULL;
ALTER TABLE [dbo].[USERS] ALTER COLUMN [USERNAME] NVARCHAR(100) NOT NULL;
ALTER TABLE [dbo].[USERS] ALTER COLUMN [NORMALIZED_USERNAME] NVARCHAR(100) NOT NULL;

-- Fix NOTIFICATIONS table column constraints
ALTER TABLE [dbo].[NOTIFICATIONS] ALTER COLUMN [USER_ID] INT NOT NULL;
ALTER TABLE [dbo].[NOTIFICATIONS] ALTER COLUMN [TITLE] NVARCHAR(200) NOT NULL;
ALTER TABLE [dbo].[NOTIFICATIONS] ALTER COLUMN [MESSAGE] NVARCHAR(1000) NOT NULL;
ALTER TABLE [dbo].[NOTIFICATIONS] ALTER COLUMN [TYPE] NVARCHAR(50) NOT NULL;
ALTER TABLE [dbo].[NOTIFICATIONS] ALTER COLUMN [IS_READ] BIT NOT NULL;

-- Add default constraint for IS_READ if it doesn't exist
IF NOT EXISTS (
    SELECT * FROM sys.default_constraints 
    WHERE name = 'DF_NOTIFICATIONS_IS_READ'
)
BEGIN
    ALTER TABLE [dbo].[NOTIFICATIONS] 
    ADD CONSTRAINT [DF_NOTIFICATIONS_IS_READ] 
    DEFAULT (0) FOR [IS_READ];
END

-- Add default constraint for CREATED_AT if it doesn't exist
IF NOT EXISTS (
    SELECT * FROM sys.default_constraints 
    WHERE name = 'DF_NOTIFICATIONS_CREATED_AT'
)
BEGIN
    ALTER TABLE [dbo].[NOTIFICATIONS] 
    ADD CONSTRAINT [DF_NOTIFICATIONS_CREATED_AT] 
    DEFAULT (GETDATE()) FOR [CREATED_AT];
END

-- Verify the changes
SELECT 
    'USERS' as TableName,
    COLUMN_NAME,
    DATA_TYPE,
    CHARACTER_MAXIMUM_LENGTH,
    IS_NULLABLE
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'USERS'
ORDER BY ORDINAL_POSITION;

SELECT 
    'NOTIFICATIONS' as TableName,
    COLUMN_NAME,
    DATA_TYPE,
    CHARACTER_MAXIMUM_LENGTH,
    IS_NULLABLE
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'NOTIFICATIONS'
ORDER BY ORDINAL_POSITION;

-- Check for any existing notifications
SELECT COUNT(*) as TotalNotifications FROM NOTIFICATIONS;

-- Check for any orphaned notifications
SELECT COUNT(*) as OrphanedNotifications
FROM NOTIFICATIONS n
LEFT JOIN USERS u ON n.USER_ID = u.USER_ID
WHERE u.USER_ID IS NULL; 