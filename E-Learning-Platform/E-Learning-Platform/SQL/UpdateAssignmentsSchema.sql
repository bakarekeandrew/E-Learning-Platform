-- Update ASSIGNMENTS table
IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'[dbo].[ASSIGNMENTS]') AND name = 'INSTRUCTIONS')
BEGIN
    ALTER TABLE ASSIGNMENTS ADD INSTRUCTIONS NVARCHAR(MAX);
END

IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'[dbo].[ASSIGNMENTS]') AND name = 'DUE_DATE')
BEGIN
    ALTER TABLE ASSIGNMENTS ADD DUE_DATE DATETIME;
END

IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'[dbo].[ASSIGNMENTS]') AND name = 'MAX_SCORE')
BEGIN
    ALTER TABLE ASSIGNMENTS ADD MAX_SCORE INT NOT NULL DEFAULT 100;
END

IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'[dbo].[ASSIGNMENTS]') AND name = 'MODULE_ID')
BEGIN
    ALTER TABLE ASSIGNMENTS ADD MODULE_ID INT NOT NULL DEFAULT 1;
    ALTER TABLE ASSIGNMENTS ADD CONSTRAINT FK_ASSIGNMENTS_MODULES FOREIGN KEY (MODULE_ID) REFERENCES MODULES(MODULE_ID);
END

-- Create ASSIGNMENT_SUBMISSIONS table if not exists
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ASSIGNMENT_SUBMISSIONS]') AND type in (N'U'))
BEGIN
    CREATE TABLE ASSIGNMENT_SUBMISSIONS (
        SUBMISSION_ID INT IDENTITY(1,1) PRIMARY KEY,
        ASSIGNMENT_ID INT NOT NULL,
        USER_ID INT NOT NULL,
        SUBMISSION_TEXT NVARCHAR(MAX),
        FILE_PATH NVARCHAR(255),
        SUBMISSION_DATE DATETIME NOT NULL DEFAULT GETDATE(),
        GRADE INT,
        FEEDBACK NVARCHAR(MAX),
        STATUS VARCHAR(20) NOT NULL DEFAULT 'SUBMITTED', -- 'DRAFT', 'SUBMITTED', 'GRADED', 'LATE'
        CONSTRAINT FK_ASSIGNMENT_SUBMISSIONS_ASSIGNMENTS FOREIGN KEY (ASSIGNMENT_ID) REFERENCES ASSIGNMENTS(ASSIGNMENT_ID) ON DELETE CASCADE,
        CONSTRAINT FK_ASSIGNMENT_SUBMISSIONS_USERS FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
    );
END 