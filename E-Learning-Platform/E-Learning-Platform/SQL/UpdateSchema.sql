-- Update QUIZZES table
IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'[dbo].[QUIZZES]') AND name = 'TIME_LIMIT_MINUTES')
BEGIN
    ALTER TABLE QUIZZES ADD TIME_LIMIT_MINUTES INT NOT NULL DEFAULT 0;
END

IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'[dbo].[QUIZZES]') AND name = 'DESCRIPTION')
BEGIN
    ALTER TABLE QUIZZES ADD DESCRIPTION NVARCHAR(MAX);
END

IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'[dbo].[QUIZZES]') AND name = 'PASSING_SCORE')
BEGIN
    ALTER TABLE QUIZZES ADD PASSING_SCORE INT NOT NULL DEFAULT 60;
END

IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'[dbo].[QUIZZES]') AND name = 'MODULE_ID')
BEGIN
    ALTER TABLE QUIZZES ADD MODULE_ID INT NOT NULL DEFAULT 1;
    ALTER TABLE QUIZZES ADD CONSTRAINT FK_QUIZZES_MODULES FOREIGN KEY (MODULE_ID) REFERENCES MODULES(MODULE_ID);
END

-- Update ASSIGNMENTS table
IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'[dbo].[ASSIGNMENTS]') AND name = 'INSTRUCTIONS')
BEGIN
    ALTER TABLE ASSIGNMENTS ADD INSTRUCTIONS NVARCHAR(MAX);
END

IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'[dbo].[ASSIGNMENTS]') AND name = 'DUE_DATE')
BEGIN
    ALTER TABLE ASSIGNMENTS ADD DUE_DATE DATETIME;
END

IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'[dbo].[ASSIGNMENTS]') AND name = 'MAX_SCORE')
BEGIN
    ALTER TABLE ASSIGNMENTS ADD MAX_SCORE INT NOT NULL DEFAULT 100;
END

IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'[dbo].[ASSIGNMENTS]') AND name = 'MODULE_ID')
BEGIN
    ALTER TABLE ASSIGNMENTS ADD MODULE_ID INT NOT NULL DEFAULT 1;
    ALTER TABLE ASSIGNMENTS ADD CONSTRAINT FK_ASSIGNMENTS_MODULES FOREIGN KEY (MODULE_ID) REFERENCES MODULES(MODULE_ID);
END

-- Create QUIZ_QUESTIONS table if not exists
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[QUIZ_QUESTIONS]') AND type in (N'U'))
BEGIN
    CREATE TABLE QUIZ_QUESTIONS (
        QUESTION_ID INT IDENTITY(1,1) PRIMARY KEY,
        QUIZ_ID INT NOT NULL,
        QUESTION_TEXT NVARCHAR(MAX) NOT NULL,
        QUESTION_TYPE VARCHAR(20) NOT NULL, -- 'MULTIPLE_CHOICE', 'TRUE_FALSE', 'SHORT_ANSWER'
        POINTS INT NOT NULL DEFAULT 1,
        CORRECT_ANSWER NVARCHAR(MAX),
        CONSTRAINT FK_QUIZ_QUESTIONS_QUIZZES FOREIGN KEY (QUIZ_ID) REFERENCES QUIZZES(QUIZ_ID) ON DELETE CASCADE
    );
END

-- Create QUIZ_OPTIONS table if not exists
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[QUIZ_OPTIONS]') AND type in (N'U'))
BEGIN
    CREATE TABLE QUIZ_OPTIONS (
        OPTION_ID INT IDENTITY(1,1) PRIMARY KEY,
        QUESTION_ID INT NOT NULL,
        OPTION_TEXT NVARCHAR(MAX) NOT NULL,
        IS_CORRECT BIT NOT NULL DEFAULT 0,
        CONSTRAINT FK_QUIZ_OPTIONS_QUESTIONS FOREIGN KEY (QUESTION_ID) REFERENCES QUIZ_QUESTIONS(QUESTION_ID) ON DELETE CASCADE
    );
END

-- Create QUIZ_ATTEMPTS table if not exists
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[QUIZ_ATTEMPTS]') AND type in (N'U'))
BEGIN
    CREATE TABLE QUIZ_ATTEMPTS (
        ATTEMPT_ID INT IDENTITY(1,1) PRIMARY KEY,
        QUIZ_ID INT NOT NULL,
        USER_ID INT NOT NULL,
        START_TIME DATETIME NOT NULL DEFAULT GETDATE(),
        END_TIME DATETIME,
        SCORE INT,
        STATUS VARCHAR(20) NOT NULL DEFAULT 'IN_PROGRESS', -- 'IN_PROGRESS', 'COMPLETED', 'TIMED_OUT'
        CONSTRAINT FK_QUIZ_ATTEMPTS_QUIZZES FOREIGN KEY (QUIZ_ID) REFERENCES QUIZZES(QUIZ_ID) ON DELETE CASCADE,
        CONSTRAINT FK_QUIZ_ATTEMPTS_USERS FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
    );
END

-- Create QUIZ_RESPONSES table if not exists
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[QUIZ_RESPONSES]') AND type in (N'U'))
BEGIN
    CREATE TABLE QUIZ_RESPONSES (
        RESPONSE_ID INT IDENTITY(1,1) PRIMARY KEY,
        ATTEMPT_ID INT NOT NULL,
        QUESTION_ID INT NOT NULL,
        SELECTED_OPTION_ID INT,
        TEXT_RESPONSE NVARCHAR(MAX),
        IS_CORRECT BIT,
        POINTS_EARNED INT DEFAULT 0,
        CONSTRAINT FK_QUIZ_RESPONSES_ATTEMPTS FOREIGN KEY (ATTEMPT_ID) REFERENCES QUIZ_ATTEMPTS(ATTEMPT_ID) ON DELETE CASCADE,
        CONSTRAINT FK_QUIZ_RESPONSES_QUESTIONS FOREIGN KEY (QUESTION_ID) REFERENCES QUIZ_QUESTIONS(QUESTION_ID),
        CONSTRAINT FK_QUIZ_RESPONSES_OPTIONS FOREIGN KEY (SELECTED_OPTION_ID) REFERENCES QUIZ_OPTIONS(OPTION_ID)
    );
END

-- Create ASSIGNMENT_SUBMISSIONS table if not exists
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ASSIGNMENT_SUBMISSIONS]') AND type in (N'U'))
BEGIN
    CREATE TABLE ASSIGNMENT_SUBMISSIONS (
        SUBMISSION_ID INT IDENTITY(1,1) PRIMARY KEY,
        ASSIGNMENT_ID INT NOT NULL,
        USER_ID INT NOT NULL,
        SUBMISSION_TEXT NVARCHAR(MAX),
        FILE_PATH NVARCHAR(255),
        SUBMISSION_DATE DATETIME NOT NULL DEFAULT GETDATE(),
        GRADE INT,
        FEEDBACK NVARCHAR(MAX),
        STATUS VARCHAR(20) NOT NULL DEFAULT 'SUBMITTED', -- 'DRAFT', 'SUBMITTED', 'GRADED', 'LATE'
        CONSTRAINT FK_ASSIGNMENT_SUBMISSIONS_ASSIGNMENTS FOREIGN KEY (ASSIGNMENT_ID) REFERENCES ASSIGNMENTS(ASSIGNMENT_ID) ON DELETE CASCADE,
        CONSTRAINT FK_ASSIGNMENT_SUBMISSIONS_USERS FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
    );
END 