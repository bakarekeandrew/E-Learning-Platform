-- Create PERMISSIONS table
CREATE TABLE PERMISSIONS (
    PERMISSION_ID INT IDENTITY(1,1) PRIMARY KEY,
    PERMISSION_NAME NVARCHAR(100) NOT NULL UNIQUE,
    DESCRIPTION NVARCHAR(500),
    CREATED_DATE DATETIME DEFAULT GETDATE()
);

-- Create PERMISSION_HIERARCHY table for nested permissions
CREATE TABLE PERMISSION_HIERARCHY (
    PARENT_PERMISSION_ID INT NOT NULL,
    CHILD_PERMISSION_ID INT NOT NULL,
    LEVEL INT DEFAULT 0,
    CREATED_DATE DATETIME DEFAULT GETDATE(),
    PRIMARY KEY (PARENT_PERMISSION_ID, CHILD_PERMISSION_ID),
    FOREIGN KEY (PARENT_PERMISSION_ID) REFERENCES PERMISSIONS(PERMISSION_ID),
    FOREIGN KEY (CHILD_PERMISSION_ID) REFERENCES PERMISSIONS(PERMISSION_ID)
);

-- Create USER_PERMISSIONS table
CREATE TABLE USER_PERMISSIONS (
    USER_ID INT NOT NULL,
    PERMISSION_ID INT NOT NULL,
    IS_GRANT BIT DEFAULT 1,
    GRANTED_DATE DATETIME DEFAULT GETDATE(),
    PRIMARY KEY (USER_ID, PERMISSION_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (PERMISSION_ID) REFERENCES PERMISSIONS(PERMISSION_ID)
);

-- Create ROLE_PERMISSIONS table
CREATE TABLE ROLE_PERMISSIONS (
    ROLE_ID INT NOT NULL,
    PERMISSION_ID INT NOT NULL,
    ASSIGNED_DATE DATETIME DEFAULT GETDATE(),
    ASSIGNED_BY INT,
    PRIMARY KEY (ROLE_ID, PERMISSION_ID),
    FOREIGN KEY (ROLE_ID) REFERENCES ROLES(ROLE_ID),
    FOREIGN KEY (PERMISSION_ID) REFERENCES PERMISSIONS(PERMISSION_ID),
    FOREIGN KEY (ASSIGNED_BY) REFERENCES USERS(USER_ID)
);

-- Insert basic permissions
INSERT INTO PERMISSIONS (PERMISSION_NAME, DESCRIPTION) VALUES
('ViewUsers', 'Permission to view user list and basic information'),
('ViewCourses', 'Permission to view course list and details'),
('ManagePermissions', 'Permission to manage user and role permissions'),
('ROLE.VIEW', 'Permission to view roles'),
('ROLE.MANAGE', 'Permission to manage roles'),
('PERMISSION.MANAGE', 'Permission to manage permissions');

-- Grant basic permissions to ADMIN role
INSERT INTO ROLE_PERMISSIONS (ROLE_ID, PERMISSION_ID)
SELECT r.ROLE_ID, p.PERMISSION_ID
FROM ROLES r
CROSS JOIN PERMISSIONS p
WHERE r.ROLE_NAME = 'ADMIN'; 